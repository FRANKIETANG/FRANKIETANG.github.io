<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[CSS 学习思路]]></title>
    <url>%2F2018%2F02%2F05%2FCSS%20%E5%AD%A6%E4%B9%A0%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[CSS 学习思路CSS 是怎么来的先想一个问题，怎么把一个页面的背景有颜色，并且有一个&lt;h1&gt;的标题并且居中，标题是红色。 在没有 CSS 的时候，HTML 是有自己的一套办法的。 1234567891011&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor="yellow"&gt; &lt;h1&gt;&lt;center&gt;&lt;font color="red"&gt;标题&lt;/font&gt;&lt;/center&gt;&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 上面的 bgcolor=&quot;yellow&quot; 、 &lt;center&gt; 和 color=&quot;red&quot; 都是 HTML 的内置方法 这样内联写 CSS 不够美观，而且很难看。 那用 CSS 写的确是很方便，就像指哪打哪一样。 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; body &#123; background-color: yellow; &#125; h1 &#123; color: red; text-align: center; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;标题&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 做到一样的效果，但是逻辑更加清晰了。 当然这样写也不太好，CSS 写在 HTML 挤在一堆会看的眼疼的（想起大学在社团写的第一个页面，CSS 和 HTML 写在一起先写完 HTML 的标签，然后又滚上去 &lt;style&gt; 里面写 CSS ，体验真的很不友好 hhh） 解决办法也很明显： &lt;link&gt; 引入 CSS。 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.10.0/github-markdown.css"&gt;&lt;/head&gt;&lt;body class="markdown-body"&gt; &lt;h1&gt;大标题&lt;/h1&gt; &lt;h2&gt;小标题&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;项目1&lt;/li&gt; &lt;li&gt;项目2&lt;/li&gt; &lt;li&gt;项目3&lt;/li&gt; &lt;li&gt;项目4&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; 在 &lt;link&gt; 也可以加上媒体查询 12&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.10.0/github-markdown.css" media="print"&gt;&lt;!-- 打印的时候使用 github-markdown-css --&gt; 打印前的普通样子 按上打印之后自动加上样式 CSS 为什么难学因为效果基本靠抄（像我这种半吊子，直接就上 codepen.io 一搜一抄就好），抄完就不管了（肯定有很多人想我这样…），要么就用现成的（Bootstrap / elementUI）。结果就像现在这样只会 JS 不会 CSS 。 CSS经常会有很多地方冲突，举几个例子： 各属性之间互相影响 margin &amp; border 先看看这个例子 123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .demo1 &#123; border: 1px solid red; height: 100px; margin: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="demo1"&gt;&lt;/div&gt; &lt;div style="border-top: 0.1px solid green"&gt;&lt;/div&gt; &lt;div class="demo1"&gt;&lt;/div&gt; &lt;div class="demo1"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 可以看到下面两个 div 盒子之间的 margin 是合在一起的（外边距合并），而上两个盒子之间加一个盒子加上 border 浏览器就会以为多了一个盒子。（其实我觉得这个也不难理解，因为中间这个盒子如果不加 border 加文本也会变成一个盒子，上下自动添加 margin 。） 但是特别的东西来了，看看下面这个代码。 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .demo1 &#123; border: 1px solid red; height: 100px; margin: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="demo1"&gt;&lt;/div&gt; &lt;div style="display: table;"&gt;&lt;/div&gt; &lt;div class="demo1"&gt;&lt;/div&gt; &lt;div style="display: inline;"&gt;&lt;/div&gt; &lt;div class="demo1"&gt;&lt;/div&gt; &lt;div style="display:flex;"&gt;&lt;/div&gt; &lt;div class="demo1"&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 这个 display:table; 居然可以被当成是一个盒子（而 display: inline; 不能当成盒子， display:flex; 又可以当成盒子。） 所以从这些例子可以看出只要加了 border 就会影响到 margin，而且经过上面的这些实验也发现不止 border 会有影响，像 display 的某些属性也会影响到 margin 。 12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent &#123; border-top: 1px solid green; /*这一句可以删掉看看效果*/ background-color: yellow; &#125; .child &#123; height: 100px; border: 1px solid red; margin-top: 100px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 可以影响到 margin 的属性其实还有很多，可以一个一个去试试。 小圆点 &amp; display 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; li &#123; display: block; &#125; /* li &#123; display: list-item; &#125; */ /* li &#123; display: inline; &#125; */ &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;ul&gt; &lt;li&gt;item1&lt;/li&gt; &lt;li&gt;item2&lt;/li&gt; &lt;li&gt;item3&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; ​ 对 li 设置 display 的其他属性会覆盖掉 li 的原生 CSS display: list-item （我猜的）。这个很难理解只能死背。 position: absolute &amp; display: inline 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent &#123; background: yellow; height: 100px; position: relative; &#125; .child &#123; display: inline; border: 1px solid red; position: absolute; bottom: 0; right: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;内联样式&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 这里的主要问题是 display: inline 在 position: absolute 的影响下竟然变成了 display: block 。 各元素之间互相影响 position: fixed &amp; transform 1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent &#123; background: yellow; height: 100px; position: relative; transform: scale(0.9); /*注意这里*/ &#125; /*脑补很多代码*/ .xxxx&#123;&#125; .xxxx&#123;&#125; .xxxx&#123;&#125; .xxxx&#123;&#125; .child &#123; display: inline; border: 1px solid red; position: fixed; /*注意这里*/ bottom: 0; left: 0; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;内联样式&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 这个就很明显了，用了 position: fixed 那 child 的 div 应该是在左下角，但是加了 transform: scale(0.9) 就变成了想绝对定位的东西，这个的确是挺难理解的。 ​ float 影响 inline 元素 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent &#123; background: yellow; height: 100px; &#125; .float &#123; background: rgba(255,0,0,0.5); width: 100px; height: 60px; float: left; &#125; .child &#123; width: 300px; height: 50px; background: white &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="float"&gt;浮动&lt;/div&gt; &lt;div class="child"&gt;我是文字&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; ​ 为什么浮动不会影响 child 里面的文字呢？这个也是很难理解的。 虽然方老师说 CSS 很难理解，但是对于文科出身的我其实没事么难度（倒是 JS 挺难学的…）。 CSS 的套路但是应付平时工作的话只用记点套路就好了，常用的东西来来去去就那么点东西。 套路 布局（指的是两栏三栏布局） 可以分 PC 端和 Mobile 端。而 PC 端分为 IE8 和 chrome，IE8 用 Float 布局，chrome 和 Mobile 端用 Flex 布局就好。 Float 布局 两栏 1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .c &#123; width: 960px; margin: 0 auto; &#125; .l &#123; float: left; width: 280px; height: 500px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .r &#123; float: left; width: 630px; height: 1000px; margin-left: 50px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="c"&gt; &lt;div class="l"&gt;1111&lt;/div&gt; &lt;div class="r"&gt;2222&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 三栏 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .c &#123; width: 960px; margin: 0 auto; &#125; .l &#123; float: left; width: 200px; height: 700px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .m &#123; float: left; width: 500px; height: 1000px; margin-left: 30px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .r &#123; float: left; width: 200px; height: 500px; margin-left: 30px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="c"&gt; &lt;div class="l"&gt;1111&lt;/div&gt; &lt;div class="m"&gt;3333&lt;/div&gt; &lt;div class="r"&gt;2222&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; Flex 布局 两栏 1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .c &#123; width: 960px; margin: 0 auto; display: flex; flex-flow: row; &#125; .l &#123; width: 280px; height: 500px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .r &#123; flex: 1; height: 1000px; margin-left: 50px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="c"&gt; &lt;div class="l"&gt;1111&lt;/div&gt; &lt;div class="r"&gt;2222&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 三栏 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .c &#123; width: 960px; margin: 0 auto; display: flex; flex-flow: row; &#125; .l &#123; width: 200px; height: 700px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .m &#123; flex: 0.7; height: 1000px; margin-left: 30px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; .r &#123; flex: 0.3; height: 500px; margin-left: 30px; background-color: #f1f1f1; box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12)!important; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="c"&gt; &lt;div class="l"&gt;1111&lt;/div&gt; &lt;div class="m"&gt;3333&lt;/div&gt; &lt;div class="r"&gt;2222&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 水平居中 子元素宽度不确定（ margin-left 和 margin-right 要计算） 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .child&#123; margin-left: 20px; margin-right: 20px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 子元素 300px 的宽度 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .child&#123; margin-left: auto; margin-right: auto; width: 300px; height: 100px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 123456789101112131415161718192021222324&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent&#123; text-align: center; &#125; .child&#123; display: inline-block; width: 300px; height: 100px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 垂直居中 子元素高度确定 123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent&#123; border: 1px solid black; padding-top: 20px; padding-bottom: 20px; &#125; .child&#123; margin-left: auto; margin-right: auto; width: 300px; height: 100px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 子元素高度不确定 1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent&#123; border: 1px solid black; padding-top: 20px; padding-bottom: 20px; &#125; .child&#123; margin-left: auto; margin-right: auto; width: 300px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试加字试试&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 父元素高度确定（烂代码，尽量避免） 兼容 IE8 123456789101112131415161718192021222324252627&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent&#123; display: table-cell; vertical-align: middle; height: 500px; border: 1px solid black; &#125; .child&#123; margin: 100px; width: 300px; height: 100px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 其他用 Flex 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width"&gt; &lt;title&gt;JS Bin&lt;/title&gt; &lt;style&gt; .parent&#123; display: flex; align-items: center; border: 1px solid black; height: 500px; &#125; .child&#123; margin-left: auto; margin-right: auto; width: 300px; height: 100px; background: red; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class="parent"&gt; &lt;div class="child"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 工具 CSS 3 Generator 随便点开一个就好，这里就不细说了。 CSS 资料http://cndevdocs.com/ CSS 实际上是性价比很低的一个东西，大多数公司不需要 CSS 那么厉害的前端。]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
</search>
